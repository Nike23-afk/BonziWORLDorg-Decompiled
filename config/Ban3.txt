const fs = require('fs');
const WebSocket = require('ws');
const server = new WebSocket.Server({ port: 8080 });

// Load banned IPs from a file
let bannedIPs = [];
if (fs.existsSync('bannedIPs.json')) {
    bannedIPs = JSON.parse(fs.readFileSync('bannedIPs.json'));
}

// Function to save banned IPs to a file
function saveBannedIPs() {
    fs.writeFileSync('bannedIPs.json', JSON.stringify(bannedIPs));
}

// Middleware to check if the user's IP is banned
server.on('connection', (ws, req) => {
    const userIP = req.socket.remoteAddress;

    if (bannedIPs.includes(userIP)) {
        ws.close(1008, 'You are banned from this server.');
        return;
    }

    // Handle the connection as usual
    ws.on('message', (message) => {
        // Process incoming messages
    });
});

// Function to ban an IP
function banIP(ip) {
    if (!bannedIPs.includes(ip)) {
        bannedIPs.push(ip);
        saveBannedIPs();
        console.log(`IP ${ip} has been banned.`);
    } else {
        console.log(`IP ${ip} is already banned.`);
    }
}

// Example usage: Ban a specific IP
banIP('24.77.90.227');
